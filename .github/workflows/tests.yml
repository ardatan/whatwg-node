name: test

on:
  push:
    branches:
      - 'master'
  pull_request:
    paths-ignore:
      - 'website/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: --max-old-space-size=4096
  NODE_NO_WARNINGS: 1
  CI: true

jobs:
  prettier-check:
    name: prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 24
      - name: Prettier Check
        run: yarn prettier:check
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 24
      - name: ESLint
        run: yarn lint

  type-check:
    name: type check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 24
      - name: Type Check
        run: yarn ts:check

  unit:
    name: unit / node ${{matrix.node-version}}
    runs-on: ubuntu-latest
    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 8888:80
    strategy:
      matrix:
        node-version: [18, 20, 24]
      fail-fast: false
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Install Required Libraries
        run: sudo apt update && sudo apt install -y libcurl4-openssl-dev libssl-dev
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: ${{ matrix.node-version }}
      - name: Cache Jest
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: .cache/jest
          key: ${{ runner.os }}-${{matrix.node-version}}-jest-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.node-version}}-jest-
      - name: Unit Tests
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: yarn test --ci
      - name: Leak Tests
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: yarn test:leaks --ci

  unit-bun:
    name: unit / bun
    runs-on: ubuntu-latest
    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 8888:80
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 24
      - name: Test
        run: yarn test:bun --ci

  unit-deno:
    name: unit / deno
    runs-on: ubuntu-latest
    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 8888:80
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 24
      - name: Test
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: yarn test:deno

  esm:
    name: esm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 24
      - name: Build Packages
        run: yarn build
      - name: Test ESM
        run: yarn esm:check

  e2e:
    strategy:
      fail-fast: false
      matrix:
        plan: ['aws-lambda', 'cloudflare-workers', 'cloudflare-modules']
        # TODO: Add vercel and azure
    name: e2e / ${{ matrix.plan }}
    env:
      # Pulumi
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      # AWS
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      # Azure
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # CloudFlare
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      # Vercel
      VERCEL_AUTH_TOKEN: ${{ secrets.VERCEL_AUTH_TOKEN }}
      VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.fork != true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Setup Node
        uses: actions/setup-node@master
        with:
          node-version: 24

      - name: Cache Node Modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        id: node-modules-cache-deployment-e2e
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-23-node-modules-${{hashFiles('yarn.lock')}}-${{hashFiles('patches/**/*')}}
          restore-keys: |
            ${{runner.os}}-23-node-modules-${{hashFiles('yarn.lock')}}-${{hashFiles('patches/**/*')}}
      - name: Install Dependencies using Yarn
        run: yarn install --ignore-engines --frozen-lockfile --immutable
        if: steps.node-modules-cache-deployment-e2e.outputs.cache-hit != 'true'

      - name: Build Packages
        run: yarn build

      - name: Install pulumi
        uses: pulumi/setup-pulumi@b374ceb6168550de27c6eba92e01c1a774040e11 # v2

      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=docker_host::$(docker context inspect --format '{{.Endpoints.docker.Host}}')"

      - name: Provision & Test
        run: yarn e2e
        working-directory: e2e/${{ matrix.plan }}
        env:
          COMMIT_ID: ${{ steps.vars.outputs.sha_short }}

      - name: Ensure Deletion
        run: yarn e2e
        if: ${{ always() }}
        working-directory: e2e/${{ matrix.plan }}
        env:
          COMMIT_ID: ${{ steps.vars.outputs.sha_short }}
          ENSURE_DELETION: 1
